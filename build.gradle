plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id "com.adarshr.test-logger" version "4.0.0"
}

group = 'oauth.apisample.javaspringboot'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = 'https://repo.spring.io/milestone'
    }
}

springBoot {
    mainClass = 'com.authsamples.api.FinalApiApplication'
}

ext {
    // API dependency versions
    spring_boot_starter_version = '3.5.3'
    spring_security_version = '6.5.1'
    jose4j_version = '0.9.6'
    cache2k_version = '1.6.0.Final'
    commons_codec_version = '1.18.0'
    jackson_version = '2.18.3'
    logback_version = '1.5.18'
    lombok_version = '1.18.38'
    guava_version = '33.4.0-jre'

    // Test dependency versions
    junit_jupiter_version = '5.12.0'
    junit_platform_suite_version = '1.12.0'
}

dependencies {

    // Spring dependencies
    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_starter_version"
    implementation "org.springframework.security:spring-security-config:$spring_security_version"
    implementation "org.springframework.security:spring-security-web:$spring_security_version"

    // OAuth and related cachin
    implementation "org.bitbucket.b_c:jose4j:$jose4j_version"
    implementation "org.cache2k:cache2k-base-bom:$cache2k_version"
    implementation "commons-codec:commons-codec:$commons_codec_version"

    // JSON handling
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    // Logging framework
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // Utilities
    implementation "com.google.guava:guava:$guava_version"

    // Compiler dependencies
    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"

    // Test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.platform:junit-platform-suite-engine:$junit_platform_suite_version"

    // Test compiler dependencies
    testCompileOnly "org.projectlombok:lombok:$lombok_version"
    testAnnotationProcessor "org.projectlombok:lombok:$lombok_version"
}

// Set the Java version
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

// Make warnings visible
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xlint:deprecation'
}

// Make tests run only the integration tests
test {
    useJUnitPlatform()
    include '**/IntegrationTests.class'
    testLogging.showStandardStreams = true
    outputs.upToDateWhen { false }
}

// Add a separate task for load tests
// https://docs.gradle.org/8.1.1/userguide/upgrading_version_8.html#test_task_default_classpath
//
// To run the load test in Intellij select this option:
// - Build, Execution, Deployment > Build Tools > gradle > Run Tests using: Intellij IDEA
//
tasks.register('loadtest', Test) {
    useJUnitPlatform()
    include '**/LoadTest.class'
    testClassesDirs = testing.suites.test.sources.output.classesDirs
    classpath = testing.suites.test.sources.runtimeClasspath
    testLogging.showStandardStreams = true
    outputs.upToDateWhen { false }
}
